name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release



jobs:


  # setup:
  #     name : LLVM setup
  #     runs-on : ubuntu-latest
  #     steps:
  #       - run : git clone https://github.com/llvm/llvm-project.git
  #       - run : cd llvm-project
  #       - run : mkdir build
  #       - run : cd build 
  #       - run : cmake -G Ninja -DLLVM_ENABLE_PROJECTS="clang;libcxx;libcxxabi" ../llvm
  #       - run : cmake --build . --target install


  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest


    

    steps:
    - name : Install dependencies
      run: |
          wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.1.0/clang+llvm-11.1.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
          tar -xvf "clang+llvm-11.1.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz"
          cd clang+llvm-11.1.0-x86_64-linux-gnu-ubuntu-16.04
          cd bin
          sudo mv ./* ../../../../../../../usr/local/bin
          cd ..
          cd include 
          sudo mv ./* ../../../../../../../usr/local/include
          cd ..
          cd lib 
          sudo mv ./* ../../../../../../../usr/local/lib
          cd ..
          cd share 
          sudo mv ./* ../../../../../../../usr/local/share
          cd ..
          cd libexec
          sudo mv ./* ../../../../../../../usr/libexec
          cd ..
          cd ..
  

    - uses: actions/checkout@v2
   
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Generate
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake ..


    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . #--config $BUILD_TYPE

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   shell: bash
    #   # Execute tests defined by the CMake configuration.  
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C $BUILD_TYPE
